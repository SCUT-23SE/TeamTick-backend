// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package gen

// Defines values for BaseResponseCode.
const (
	N0 BaseResponseCode = 0
	N1 BaseResponseCode = 1
)

// Defines values for GroupRole.
const (
	Admin  GroupRole = "admin"
	Member GroupRole = "member"
)

// Defines values for JoinRequestStatus.
const (
	JoinRequestStatusApproved JoinRequestStatus = "approved"
	JoinRequestStatusPending  JoinRequestStatus = "pending"
	JoinRequestStatusRejected JoinRequestStatus = "rejected"
)

// Defines values for RequestQueryStatus.
const (
	RequestQueryStatusAll       RequestQueryStatus = "all"
	RequestQueryStatusPending   RequestQueryStatus = "pending"
	RequestQueryStatusProcessed RequestQueryStatus = "processed"
)

// Defines values for GetGroupsParamsFilter.
const (
	Created GetGroupsParamsFilter = "created"
	Joined  GetGroupsParamsFilter = "joined"
)

// Defines values for PutGroupsGroupIdJoinRequestsRequestIdJSONBodyAction.
const (
	Approve PutGroupsGroupIdJoinRequestsRequestIdJSONBodyAction = "approve"
	Reject  PutGroupsGroupIdJoinRequestsRequestIdJSONBodyAction = "reject"
)

// BaseResponse defines model for BaseResponse.
type BaseResponse struct {
	// Code 响应码，0表示成功，1表示失败
	Code BaseResponseCode `json:"code"`
}

// BaseResponseCode 响应码，0表示成功，1表示失败
type BaseResponseCode int

// Group defines model for Group.
type Group struct {
	// CreatedAt 创建时间（Unix时间戳，单位：秒）
	CreatedAt *int64 `json:"createdAt,omitempty"`

	// CreatorId 创建者用户ID
	CreatorId *int64 `json:"creatorId,omitempty"`

	// CreatorName 创建者用户名
	CreatorName *string `json:"creatorName,omitempty"`

	// Description 用户组描述
	Description *string `json:"description,omitempty"`

	// GroupId 用户组ID
	GroupId *int64 `json:"groupId,omitempty"`

	// GroupName 用户组名称
	GroupName *string `json:"groupName,omitempty"`

	// MemberCount 成员数量
	MemberCount *int `json:"memberCount,omitempty"`
}

// GroupMember defines model for GroupMember.
type GroupMember struct {
	// JoinedAt 加入时间（Unix时间戳，单位：秒）
	JoinedAt *int64 `json:"joinedAt,omitempty"`

	// Role 用户在组中的角色，如'admin'或'member'
	Role *string `json:"role,omitempty"`

	// UserId 用户ID
	UserId *int64 `json:"userId,omitempty"`

	// Username 用户名
	Username *string `json:"username,omitempty"`
}

// GroupRole defines model for GroupRole.
type GroupRole string

// JoinRequest defines model for JoinRequest.
type JoinRequest struct {
	// GroupId 用户组ID
	GroupId *int64 `json:"groupId,omitempty"`

	// RequestId 申请ID
	RequestId *int64 `json:"requestId,omitempty"`

	// RequestedAt 申请时间（Unix时间戳，单位：秒）
	RequestedAt *int64 `json:"requestedAt,omitempty"`

	// Status 申请状态
	Status *JoinRequestStatus `json:"status,omitempty"`

	// UserId 申请用户ID
	UserId *int64 `json:"userId,omitempty"`

	// Username 申请用户名
	Username *string `json:"username,omitempty"`
}

// JoinRequestStatus 申请状态
type JoinRequestStatus string

// RequestQueryStatus defines model for RequestQueryStatus.
type RequestQueryStatus string

// SuccessWithData defines model for SuccessWithData.
type SuccessWithData struct {
	Code string `json:"code"`

	// Data 具体数据结构需在各API中定义
	Data map[string]interface{} `json:"data"`
}

// User defines model for User.
type User struct {
	// UserId 用户ID
	UserId *int64 `json:"userId,omitempty"`

	// Username 用户名
	Username *string `json:"username,omitempty"`
}

// PostAuthLoginJSONBody defines parameters for PostAuthLogin.
type PostAuthLoginJSONBody struct {
	// Password 密码
	Password *string `binding:"required" json:"password,omitempty"`

	// Username 用户名
	Username string `binding:"required" json:"username"`
}

// PostAuthRegisterJSONBody defines parameters for PostAuthRegister.
type PostAuthRegisterJSONBody struct {
	// Password 密码
	Password *string `binding:"required,min=6,max=128" json:"password,omitempty"`

	// Username 用户名
	Username string `binding:"required,min=3,max=50" json:"username"`
}

// GetGroupsParams defines parameters for GetGroups.
type GetGroupsParams struct {
	// Filter 筛选条件: `created` (我创建的), `joined` (我加入的)。不传则返回所有相关的。
	Filter *GetGroupsParamsFilter `form:"filter,omitempty" json:"filter,omitempty"`
}

// GetGroupsParamsFilter defines parameters for GetGroups.
type GetGroupsParamsFilter string

// PostGroupsJSONBody defines parameters for PostGroups.
type PostGroupsJSONBody struct {
	// Description 用户组描述
	Description *string `binding:"omitempty,max=255" json:"description,omitempty"`

	// GroupName 用户组名称
	GroupName string `binding:"required,min=1,max=50" json:"groupName"`
}

// GetGroupsSearchParams defines parameters for GetGroupsSearch.
type GetGroupsSearchParams struct {
	// ExactId 要搜索的用户组 ID
	ExactId int64 `form:"exactId" json:"exactId"`
}

// PutGroupsGroupIdJSONBody defines parameters for PutGroupsGroupId.
type PutGroupsGroupIdJSONBody struct {
	// Description 新的用户组描述
	Description *string `binding:"omitempty,max=255" json:"description,omitempty"`

	// GroupName 新的用户组名称
	GroupName *string `binding:"omitempty,min=1,max=50" json:"groupName,omitempty"`
}

// GetGroupsGroupIdJoinRequestsParams defines parameters for GetGroupsGroupIdJoinRequests.
type GetGroupsGroupIdJoinRequestsParams struct {
	// Status 筛选状态: `pending` (默认), `approved`, `rejected`, `all`。
	Status *RequestQueryStatus `form:"status,omitempty" json:"status,omitempty"`
}

// PostGroupsGroupIdJoinRequestsJSONBody defines parameters for PostGroupsGroupIdJoinRequests.
type PostGroupsGroupIdJoinRequestsJSONBody struct {
	// Reason 申请理由 (可选)
	Reason *string `binding:"omitempty,max=255" json:"reason,omitempty"`
}

// PutGroupsGroupIdJoinRequestsRequestIdJSONBody defines parameters for PutGroupsGroupIdJoinRequestsRequestId.
type PutGroupsGroupIdJoinRequestsRequestIdJSONBody struct {
	// Action 处理动作
	Action PutGroupsGroupIdJoinRequestsRequestIdJSONBodyAction `binding:"required,oneof=approve reject" json:"action"`

	// RejectReason 拒绝理由 (当 action 为 reject 时可选)
	RejectReason *string `binding:"omitempty,max=255" json:"rejectReason,omitempty"`
}

// PutGroupsGroupIdJoinRequestsRequestIdJSONBodyAction defines parameters for PutGroupsGroupIdJoinRequestsRequestId.
type PutGroupsGroupIdJoinRequestsRequestIdJSONBodyAction string

// PostAuthLoginJSONRequestBody defines body for PostAuthLogin for application/json ContentType.
type PostAuthLoginJSONRequestBody PostAuthLoginJSONBody

// PostAuthRegisterJSONRequestBody defines body for PostAuthRegister for application/json ContentType.
type PostAuthRegisterJSONRequestBody PostAuthRegisterJSONBody

// PostGroupsJSONRequestBody defines body for PostGroups for application/json ContentType.
type PostGroupsJSONRequestBody PostGroupsJSONBody

// PutGroupsGroupIdJSONRequestBody defines body for PutGroupsGroupId for application/json ContentType.
type PutGroupsGroupIdJSONRequestBody PutGroupsGroupIdJSONBody

// PostGroupsGroupIdJoinRequestsJSONRequestBody defines body for PostGroupsGroupIdJoinRequests for application/json ContentType.
type PostGroupsGroupIdJoinRequestsJSONRequestBody PostGroupsGroupIdJoinRequestsJSONBody

// PutGroupsGroupIdJoinRequestsRequestIdJSONRequestBody defines body for PutGroupsGroupIdJoinRequestsRequestId for application/json ContentType.
type PutGroupsGroupIdJoinRequestsRequestIdJSONRequestBody PutGroupsGroupIdJoinRequestsRequestIdJSONBody
